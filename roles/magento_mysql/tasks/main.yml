---
  # tasks file for magento_mysql
  # Tâches pour installer et configurer MySQL

  # Mise à jour complète du système
  - name: Update apt cache
    ansible.builtin.apt:
      update_cache: yes
    become: yes
    tags: pb0

  - name: Perform a full system upgrade
    ansible.builtin.apt:
      upgrade: dist
    become: yes
    tags: pb0

  # 0. Installation de Python, pip et des dépendances MySQL
  - name: Ensure Python and necessary packages are installed
    ansible.builtin.apt:
      name:
        - python3-pip
        - python3-dev
        - default-libmysqlclient-dev
        - build-essential
        - pkg-config
      state: present
    become: yes
    tags: pb1

  # Installation de pymysql avec pip
  - name: Install pymysql for Python3
    ansible.builtin.pip:
      name: pymysql
      state: present
    become: yes
    tags: pb1

  # Installer MySQL
  - name: Install MySQL server
    ansible.builtin.apt:
      name: mysql-server
      state: present
    become: yes
    tags: pb1

  - name: Install MySQL client
    ansible.builtin.apt:
      name: mysql-client
      state: present
    become: yes
    tags: pb1

  # Installer mysqlclient via pip
  - name: Install mysqlclient via pip
    ansible.builtin.pip:
      name: mysqlclient
    become: yes
    tags: pb1

  # 3. Démarrage du service MySQL
  - name: Ensure MySQL is running
    ansible.builtin.service:
      name: mysql
      state: started
      enabled: yes
    become: yes
    tags: pb1

  # 4. Vérification du plugin d'authentification root
  - name: Check root auth method
    ansible.builtin.command:
      cmd: "mysql -u root -e 'SELECT User, Host, plugin FROM mysql.user WHERE User=\"root\";'"
    register: root_auth_method
    ignore_errors: yes
    become: yes
    tags: pb1

  # 5. Configurer l'authentification root uniquement si nécessaire
  - name: Set root password and change auth method to mysql_native_password
    community.mysql.mysql_user:
      name: root
      password: "{{ mysql_admin_pass }}"
      host: localhost
      priv: "*.*:ALL,GRANT"
      plugin: mysql_native_password
      state: present
      login_unix_socket: /var/run/mysqld/mysqld.sock
    when: "'auth_socket' in root_auth_method.stdout"
    become: yes
    tags: pb1

  # 6. Création de la base de données
  - name: Create database
    community.mysql.mysql_db:
      name: "{{ db_name }}"
      state: present
      login_user: root
      login_password: "{{ mysql_admin_pass }}"
    become: yes
    tags: pb1

  # 7. Créer l'utilisateur MySQL pour Fabien avec un accès depuis n'importe où (%)
  - name: Create MySQL user for Fabien with wildcard host (%)
    ansible.builtin.command: >
      mysql -u root -p{{ mysql_admin_pass }} -e "CREATE USER 'Fabien'@'%' IDENTIFIED BY 'password';"
    become: yes
    ignore_errors: no  # Désactiver l'ignorance des erreurs pour capturer les erreurs SQL
    tags: pb1

  # 8. Accorder les privilèges à l'utilisateur Fabien
  - name: Grant all privileges to Fabien
    ansible.builtin.command: >
      mysql -u root -p{{ mysql_admin_pass }} -e "GRANT ALL PRIVILEGES ON *.* TO 'Fabien'@'%' WITH GRANT OPTION;"
    become: yes
    ignore_errors: no
    tags: pb1

  # 9. Flush des privilèges pour activer les changements
  - name: Flush MySQL privileges
    ansible.builtin.command: >
      mysql -u root -p{{ mysql_admin_pass }} -e "FLUSH PRIVILEGES;"
    become: yes
    ignore_errors: no
    tags: pb1

  # 10. Modification de la configuration MySQL pour accepter les connexions externes après toutes les autres configurations
  - name: Modify MySQL bind-address to allow external connections
    ansible.builtin.lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^bind-address'
      line: 'bind-address = 0.0.0.0'  # Change le bind-address pour permettre les connexions externes
      state: present
      backup: yes
    become: yes
    tags: pb1

  # 11. Redémarrage du service MySQL après modification du bind-address pour permettre les connexions externes
  - name: Restart MySQL service to apply bind-address change
    ansible.builtin.service:
      name: mysql
      state: restarted
    become: yes
    tags: pb1
